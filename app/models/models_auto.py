# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-04-20T22:12:06+00:00

from __future__ import annotations

from typing import List, Optional, Union

from pydantic import BaseModel, Field


class NextTakings(BaseModel):
    name: Optional[str] = Field(None, title='Name')
    time: Optional[str] = Field(None, title='Time')


class ScheduleCreate(BaseModel):
    user_id: Optional[int] = Field(None, title='User Id')
    name: Optional[str] = Field(None, title='Name')
    frequency: Optional[str] = Field(None, title='Frequency')
    duration: Optional[str] = Field(None, title='Duration')


class ScheduleDetail(BaseModel):
    name: Optional[str] = Field(None, title='Name')
    frequency: Optional[str] = Field(None, title='Frequency')
    duration: Optional[str] = Field(None, title='Duration')
    schedule: Optional[List[str]] = Field(None, title='Schedule')


class ScheduleResponse(BaseModel):
    schedule_id: Optional[int] = Field(None, title='Schedule Id')


class ValidationError(BaseModel):
    loc: Optional[List[Union[str, int]]] = Field(None, title='Location')
    msg: Optional[str] = Field(None, title='Message')
    type: Optional[str] = Field(None, title='Error Type')


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title='Detail')
